#!/usr/bin/env python3
"""
Setup script for Metabase API configuration.

This script helps you configure your Metabase credentials securely.
"""

import os
from pathlib import Path


def setup_metabase_config():
    """Interactive setup for Metabase configuration."""
    print("🔧 Metabase Configuration Setup")
    print("=" * 40)
    
    config_file = Path("metabase_config.env")
    
    if config_file.exists():
        overwrite = input(f"⚠️  Configuration file '{config_file}' already exists. Overwrite? (y/N): ").lower().strip()
        if overwrite != 'y':
            print("✅ Setup cancelled.")
            return
    
    print("\n📝 Please provide your Metabase details:")
    
    # Get Metabase URL
    while True:
        base_url = input("🌐 Metabase URL (e.g., https://your-company.metabase.com): ").strip()
        if base_url:
            # Remove trailing slash
            base_url = base_url.rstrip('/')
            break
        print("❌ URL cannot be empty.")
    
    # Get API Key
    while True:
        api_key = input("🔑 Metabase API Key: ").strip()
        if api_key:
            break
        print("❌ API Key cannot be empty.")
    
    # Optional settings
    print("\n⚙️  Optional settings (press Enter for defaults):")
    
    delay = input("⏱️  API delay between requests in seconds (default: 0.5): ").strip()
    if not delay:
        delay = "0.5"
    
    timeout = input("⏱️  Request timeout in seconds (default: 30): ").strip()
    if not timeout:
        timeout = "30"
    
    # Write configuration
    config_content = f"""# Metabase Configuration
# Generated by setup script

METABASE_BASE_URL={base_url}
METABASE_API_KEY={api_key}

# API Settings
API_DELAY_SECONDS={delay}
REQUEST_TIMEOUT_SECONDS={timeout}
"""
    
    try:
        with open(config_file, 'w') as f:
            f.write(config_content)
        
        print(f"\n✅ Configuration saved to '{config_file}'")
        print("🔒 Keep this file secure and don't commit it to version control!")
        
        # Test configuration
        test_config = input("\n🧪 Test the configuration now? (y/N): ").lower().strip()
        if test_config == 'y':
            print("\n🔍 Testing configuration...")
            try:
                from metabase_api_fetcher import MetabaseAPIFetcher
                fetcher = MetabaseAPIFetcher()
                if fetcher.test_connection():
                    print("✅ Configuration test successful!")
                else:
                    print("❌ Configuration test failed. Please check your credentials.")
            except Exception as e:
                print(f"❌ Error testing configuration: {str(e)}")
    
    except Exception as e:
        print(f"❌ Error saving configuration: {str(e)}")


if __name__ == "__main__":
    setup_metabase_config() 